/* tslint:disable */
/* eslint-disable */
/**
 * argus
 * My blog
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Tag,
    TagFromJSON,
    TagFromJSONTyped,
    TagToJSON,
} from './';

/**
 * 
 * @export
 * @interface PostArticleRequestBody
 */
export interface PostArticleRequestBody {
    /**
     * 
     * @type {string}
     * @memberof PostArticleRequestBody
     */
    title: string;
    /**
     * 
     * @type {Array<Tag>}
     * @memberof PostArticleRequestBody
     */
    tags: Array<Tag>;
    /**
     * 
     * @type {string}
     * @memberof PostArticleRequestBody
     */
    content: string;
    /**
     * 
     * @type {string}
     * @memberof PostArticleRequestBody
     */
    imageUrl: string;
    /**
     * 
     * @type {number}
     * @memberof PostArticleRequestBody
     */
    status: number;
}

export function PostArticleRequestBodyFromJSON(json: any): PostArticleRequestBody {
    return PostArticleRequestBodyFromJSONTyped(json, false);
}

export function PostArticleRequestBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostArticleRequestBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': json['title'],
        'tags': ((json['tags'] as Array<any>).map(TagFromJSON)),
        'content': json['content'],
        'imageUrl': json['image_url'],
        'status': json['status'],
    };
}

export function PostArticleRequestBodyToJSON(value?: PostArticleRequestBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'tags': ((value.tags as Array<any>).map(TagToJSON)),
        'content': value.content,
        'image_url': value.imageUrl,
        'status': value.status,
    };
}


